Resources:
  LinhclassLambdaFullAccessRole87C45995:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3FullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonDynamoDBFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSQSFullAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/SecretsManagerReadWrite
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - dynamodb:GetShardIterator
                  - dynamodb:PutItem
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: AdditionalDynamoDBPermissions
      RoleName: linhclass-lambda-full-access-role-ServerlessApiStack
    Metadata:
      aws:cdk:path: ServerlessApiStack/LinhclassLambdaFullAccessRole/Resource
  LinhclassLambdaFullAccessRoleDefaultPolicy151A0983:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:SendMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - linhclassLambdaCallQueueA1F3DECD
                - Arn
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :dynamodb:ap-northeast-1:650251698778:table/upload-csv
              - Ref: AWS::NoValue
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:ConditionCheckItem
              - dynamodb:BatchWriteItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - :dynamodb:ap-northeast-1:650251698778:table/Users
              - Ref: AWS::NoValue
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :secretsmanager:ap-northeast-1:650251698778:secret:HitoEnvSecret-??????
        Version: "2012-10-17"
      PolicyName: LinhclassLambdaFullAccessRoleDefaultPolicy151A0983
      Roles:
        - Ref: LinhclassLambdaFullAccessRole87C45995
    Metadata:
      aws:cdk:path: ServerlessApiStack/LinhclassLambdaFullAccessRole/DefaultPolicy/Resource
  getUrlUpdateLambda4C6CC445:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-650251698778-ap-northeast-1
        S3Key: 6092f75bbc52535a1a3a5322371591d616bd083684c4a3c4c6071189b8e2278e.zip
      FunctionName: create-preurl-s3-update-status-uploading-lambda
      Handler: create-preurl-s3-update-status-uploading-lambda.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - LinhclassLambdaFullAccessRole87C45995
          - Arn
      Runtime: nodejs18.x
      Timeout: 5
    DependsOn:
      - LinhclassLambdaFullAccessRoleDefaultPolicy151A0983
      - LinhclassLambdaFullAccessRole87C45995
    Metadata:
      aws:cdk:path: ServerlessApiStack/getUrlUpdateLambda/Resource
      aws:asset:path: asset.6092f75bbc52535a1a3a5322371591d616bd083684c4a3c4c6071189b8e2278e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getUploadStatusLambdaD9995D19:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-650251698778-ap-northeast-1
        S3Key: 8333447034dc33d685fd735f9e2bdd389bc821cac28983fed2f7540d1a0d2bb8.zip
      FunctionName: get-status-from-dynamodb-lambda
      Handler: get-status-from-dynamodb-lambda.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - LinhclassLambdaFullAccessRole87C45995
          - Arn
      Runtime: nodejs18.x
      Timeout: 5
    DependsOn:
      - LinhclassLambdaFullAccessRoleDefaultPolicy151A0983
      - LinhclassLambdaFullAccessRole87C45995
    Metadata:
      aws:cdk:path: ServerlessApiStack/getUploadStatusLambda/Resource
      aws:asset:path: asset.8333447034dc33d685fd735f9e2bdd389bc821cac28983fed2f7540d1a0d2bb8
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getBatchIdUpdateStatusUploadedLambdaE000F12D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-650251698778-ap-northeast-1
        S3Key: 705a1a23e784fdb6d55ba6f7b21b646460b5a66257a4f00ec4a8ffb1e3be79d4.zip
      FunctionName: get-batchid-update-status-to-uploaded-lambda
      Handler: get-batchid-update-status-to-uploaded.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - LinhclassLambdaFullAccessRole87C45995
          - Arn
      Runtime: nodejs18.x
      Timeout: 5
    DependsOn:
      - LinhclassLambdaFullAccessRoleDefaultPolicy151A0983
      - LinhclassLambdaFullAccessRole87C45995
    Metadata:
      aws:cdk:path: ServerlessApiStack/getBatchIdUpdateStatusUploadedLambda/Resource
      aws:asset:path: asset.705a1a23e784fdb6d55ba6f7b21b646460b5a66257a4f00ec4a8ffb1e3be79d4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  getCsvReadContentAndInProcessingLambdaDCB315DE:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-650251698778-ap-northeast-1
        S3Key: fbd977ee16227bc1b9c109737b7d304f2b7cec1010ba4ca5ad34c8e5cf9b6a5d.zip
      FunctionName: get-csv-read-detail-update-inprocessing-lambda
      Handler: get-csv-read-detail-update-inprocessing-lambda.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
          - LinhclassLambdaFullAccessRole87C45995
          - Arn
      Runtime: nodejs18.x
      Timeout: 5
    DependsOn:
      - LinhclassLambdaFullAccessRoleDefaultPolicy151A0983
      - LinhclassLambdaFullAccessRole87C45995
    Metadata:
      aws:cdk:path: ServerlessApiStack/getCsvReadContentAndInProcessingLambda/Resource
      aws:asset:path: asset.fbd977ee16227bc1b9c109737b7d304f2b7cec1010ba4ca5ad34c8e5cf9b6a5d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  linhclassLambdaCallQueueA1F3DECD:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 345600
      QueueName: linhclass-lambda-call-to-queue
      VisibilityTimeout: 30
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclassLambdaCallQueue/Resource
  linhclassDE87714D:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: linhclass
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Resource
  linhclassCloudWatchRole1C82C072:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/CloudWatchRole/Resource
  linhclassAccountDB4488BD:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - linhclassCloudWatchRole1C82C072
          - Arn
    DependsOn:
      - linhclassDE87714D
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Account
  linhclassDeploymentBB05A3E14652df349ee7cc5beb6d93f9048e2e6d:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: linhclassDE87714D
    DependsOn:
      - linhclassgetstatusGETC97FEE9B
      - linhclassgetstatusOPTIONSBBD16E13
      - linhclassgetstatus8E3BCEEB
      - linhclassgeturlGET1F6CC5D4
      - linhclassgeturlOPTIONS423C7C1C
      - linhclassgeturlEBD94850
      - linhclassOPTIONSEA2370CC
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Deployment/Resource
  linhclassDeploymentStageprodA116D990:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: linhclassDeploymentBB05A3E14652df349ee7cc5beb6d93f9048e2e6d
      RestApiId:
        Ref: linhclassDE87714D
      StageName: prod
    DependsOn:
      - linhclassAccountDB4488BD
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/DeploymentStage.prod/Resource
  linhclassOPTIONSEA2370CC:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Fn::GetAtt:
          - linhclassDE87714D
          - RootResourceId
      RestApiId:
        Ref: linhclassDE87714D
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/OPTIONS/Resource
  linhclassgeturlEBD94850:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - linhclassDE87714D
          - RootResourceId
      PathPart: get-url
      RestApiId:
        Ref: linhclassDE87714D
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-url/Resource
  linhclassgeturlOPTIONS423C7C1C:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: linhclassgeturlEBD94850
      RestApiId:
        Ref: linhclassDE87714D
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-url/OPTIONS/Resource
  linhclassgeturlGETApiPermissionServerlessApiStacklinhclass023C3CBCGETgeturlAEC016A1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getUrlUpdateLambda4C6CC445
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-1:650251698778:"
            - Ref: linhclassDE87714D
            - /
            - Ref: linhclassDeploymentStageprodA116D990
            - /GET/get-url
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-url/GET/ApiPermission.ServerlessApiStacklinhclass023C3CBC.GET..get-url
  linhclassgeturlGETApiPermissionTestServerlessApiStacklinhclass023C3CBCGETgeturl88827404:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getUrlUpdateLambda4C6CC445
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-1:650251698778:"
            - Ref: linhclassDE87714D
            - /test-invoke-stage/GET/get-url
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-url/GET/ApiPermission.Test.ServerlessApiStacklinhclass023C3CBC.GET..get-url
  linhclassgeturlGET1F6CC5D4:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getUrlUpdateLambda4C6CC445
                  - Arn
              - /invocations
      ResourceId:
        Ref: linhclassgeturlEBD94850
      RestApiId:
        Ref: linhclassDE87714D
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-url/GET/Resource
  linhclassgetstatus8E3BCEEB:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - linhclassDE87714D
          - RootResourceId
      PathPart: get-status
      RestApiId:
        Ref: linhclassDE87714D
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-status/Resource
  linhclassgetstatusOPTIONSBBD16E13:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
      ResourceId:
        Ref: linhclassgetstatus8E3BCEEB
      RestApiId:
        Ref: linhclassDE87714D
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-status/OPTIONS/Resource
  linhclassgetstatusGETApiPermissionServerlessApiStacklinhclass023C3CBCGETgetstatus58F092D2:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getUploadStatusLambdaD9995D19
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-1:650251698778:"
            - Ref: linhclassDE87714D
            - /
            - Ref: linhclassDeploymentStageprodA116D990
            - /GET/get-status
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-status/GET/ApiPermission.ServerlessApiStacklinhclass023C3CBC.GET..get-status
  linhclassgetstatusGETApiPermissionTestServerlessApiStacklinhclass023C3CBCGETgetstatusFA8A01F1:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - getUploadStatusLambdaD9995D19
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:ap-northeast-1:650251698778:"
            - Ref: linhclassDE87714D
            - /test-invoke-stage/GET/get-status
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-status/GET/ApiPermission.Test.ServerlessApiStacklinhclass023C3CBC.GET..get-status
  linhclassgetstatusGETC97FEE9B:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - getUploadStatusLambdaD9995D19
                  - Arn
              - /invocations
      ResourceId:
        Ref: linhclassgetstatus8E3BCEEB
      RestApiId:
        Ref: linhclassDE87714D
    Metadata:
      aws:cdk:path: ServerlessApiStack/linhclass/Default/get-status/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/02QT2+DMAzFP0vvwaN0lx3ppt2mdXT3ygSvTQkJw84QQnz3KWF/eno/+8l+cQrYPuSQb3DkTDdtZk0N81FQt6oi9mHQpHDk08w72AfdkuyRSTWTw843NbxjbSm1DHYwV96SevxwSQ/eGj3FcqVFWezqBmF+Dk6L8S56t3ygoTPMxrtF8e6EzCQMZRTFnwzzW6CQAhIsCntzRqERJ5grYil7k+L/sdTaByfqiXrrp46cxO5NdRQ8p5Ur/F6dbnohufgmmj/09ydrSOJlUemFcd64c7Reg/RBFuV8Q3Dlu6+igO095JsrG5MNwYnpCKpVvwGpE1WmgwEAAA==
    Metadata:
      aws:cdk:path: ServerlessApiStack/CDKMetadata/Default
Outputs:
  linhclassEndpointAD872134:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: linhclassDE87714D
          - .execute-api.ap-northeast-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: linhclassDeploymentStageprodA116D990
          - /
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

